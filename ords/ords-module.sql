
-- Generated by ORDS REST Data Services 22.3.0.r2781755
-- Schema: OBPM_CUSTOM  Date: Mon Feb 20 06:20:47 2023 
--

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'OBPM_CUSTOM',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'APH',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_base_path      => '/utils/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'api',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'api',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
    l_user varchar2(2000);
begin
    l_user := ifpks_utils.FN_VALIDATE_TOKEN(OWA_UTIL.get_cgi_env(''Authorization''));
    if l_user is null
    then
        :status_code := 401;
        OWA_UTIL.mime_header(''application/json'', FALSE);
        HTP.p(''WWW-Authenticate: Basic realm="insert realm"'');
        OWA_UTIL.http_header_close;
    else
        pr_testAPI;
    end if;
    htp.p('''');
end;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'arch_logs',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'arch_logs',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
    l_auth varchar2(4000) := OWA_UTIL.get_cgi_env(''Authorization'') ;
begin
    if l_auth is not NULL
    then
        l_auth := utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(ltrim(l_auth,''Basic ''))));
    end if;
    if nvl(l_auth,''*'') not like ''loguser%''
    then
        :status_code := 401;
        OWA_UTIL.mime_header(''application/json'', FALSE);
        HTP.p(''WWW-Authenticate: Basic realm="insert realm"'');
        OWA_UTIL.http_header_close;
    else
        PR_VW_LOG_ARCH (p_id=> :id, p_act =>:act, p_fmt => :fmt, p_srch=>:srch, p_del=>:del,p_fetch_archived=>:arch);
    end if;
end;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'logs',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.fsgbu.custom.utils',
      p_pattern        => 'logs',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
    l_auth varchar2(4000) := OWA_UTIL.get_cgi_env(''Authorization'') ;
begin
    if l_auth is not NULL
    then
        l_auth := utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(ltrim(l_auth,''Basic ''))));
    end if;
    if nvl(l_auth,''*'') not like ''loguser%''
    then
        :status_code := 401;
        OWA_UTIL.mime_header(''application/json'', FALSE);
        HTP.p(''WWW-Authenticate: Basic realm="insert realm"'');
        OWA_UTIL.http_header_close;
    else
        PR_VW_LOG (p_id=> :id, p_act =>:act, p_fmt => :fmt, p_srch=>:srch, p_del=>:del,p_fetch_archived=>:arch);
    end if;
end;');

    
        
COMMIT;

END;
